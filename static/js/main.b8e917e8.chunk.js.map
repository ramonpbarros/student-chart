{"version":3,"sources":["components/TableRow/index.js","components/Table/index.js","components/Form/index.js","pages/Home/index.js","App.js","serviceWorker.js","index.js"],"names":["TableRow","props","math","history","science","english","gpa","slice","name","Table","state","students","items","this","Fragment","className","scope","map","student","key","_id","grades","item","gpaCal","Component","Form","onSubmit","handleFormSubmit","type","placeholder","value","onChange","handleInputChange","Home","event","preventDefault","push","setState","input","target","style","textAlign","newName","newMath","newHistory","newScience","newEnglish","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.b8e917e8.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction TableRow(props) {\n  const math = props.math;\n  const history = props.history;\n  const science = props.science;\n  const english = props.english;\n\n  let mathScore;\n  let historyScore;\n  let scienceScore;\n  let englishScore;\n\n  if (math.slice(7) === \"A\") {\n    mathScore = 4;\n  } else if (math.slice(7) === \"B\") {\n    mathScore = 3;\n  } else if (math.slice(7) === \"C\") {\n    mathScore = 2;\n  } else if (math.slice(7) === \"D\") {\n    mathScore = 1;\n  } else {\n    mathScore = 0;\n  }\n\n  if (history.slice(10) === \"A\") {\n    historyScore = 4;\n  } else if (history.slice(10) === \"B\") {\n    historyScore = 3;\n  } else if (history.slice(10) === \"C\") {\n    historyScore = 2;\n  } else if (history.slice(10) === \"D\") {\n    historyScore = 1;\n  } else {\n    historyScore = 0;\n  }\n\n  if (science.slice(10) === \"A\") {\n    scienceScore = 4;\n  } else if (science.slice(10) === \"B\") {\n    scienceScore = 3;\n  } else if (science.slice(10) === \"C\") {\n    scienceScore = 2;\n  } else if (science.slice(10) === \"D\") {\n    scienceScore = 1;\n  } else {\n    scienceScore = 0;\n  }\n\n  if (english.slice(9) === \"A\") {\n    englishScore = 4;\n  } else if (english.slice(10) === \"B\") {\n    englishScore = 3;\n  } else if (english.slice(10) === \"C\") {\n    englishScore = 2;\n  } else if (english.slice(10) === \"D\") {\n    englishScore = 1;\n  } else {\n    englishScore = 0;\n  }\n\n  let gpa = (mathScore + historyScore + scienceScore + englishScore) / 4;\n  return (\n      <tr>\n        <td>{props.name}</td>\n        <td>{math.slice(7)}</td>\n        <td>{history.slice(9)}</td>\n        <td>{science.slice(9)}</td>\n        <td>{english.slice(9)}</td>\n        <td>{gpa}</td>\n      </tr>\n  );\n}\nexport default TableRow;\n","import React, { Component } from \"react\";\nimport students from \"../../students.json\";\nimport TableRow from \"../TableRow\";\n\nclass Table extends Component {\n  state = {\n    students\n  };\n\n  render() {\n    const items = this.props.items;\n\n    let mathScore;\n    let historyScore;\n    let scienceScore;\n    let englishScore;\n\n    function gpaCal(math, history, science, english) {\n      if (math === \"A\" || math === \"a\") {\n        mathScore = 4;\n      } else if (math === \"B\" || math === \"b\") {\n        mathScore = 3;\n      } else if (math === \"C\" || math === \"c\") {\n        mathScore = 2;\n      } else if (math === \"D\" || math === \"d\") {\n        mathScore = 1;\n      } else {\n        mathScore = 0;\n      }\n\n      if (history === \"A\" || history === \"a\") {\n        historyScore = 4;\n      } else if (history === \"B\" || history === \"b\") {\n        historyScore = 3;\n      } else if (history === \"C\" || history === \"c\") {\n        historyScore = 2;\n      } else if (history === \"D\" || history === \"d\") {\n        historyScore = 1;\n      } else {\n        historyScore = 0;\n      }\n\n      if (science === \"A\" || science === \"a\") {\n        scienceScore = 4;\n      } else if (science === \"B\" || science === \"b\") {\n        scienceScore = 3;\n      } else if (science === \"C\" || science === \"c\") {\n        scienceScore = 2;\n      } else if (science === \"D\" || science === \"d\") {\n        scienceScore = 1;\n      } else {\n        scienceScore = 0;\n      }\n\n      if (english === \"A\" || english === \"a\") {\n        englishScore = 4;\n      } else if (english === \"B\" || english === \"b\") {\n        englishScore = 3;\n      } else if (english === \"C\" || english === \"c\") {\n        englishScore = 2;\n      } else if (english === \"D\" || english === \"d\") {\n        englishScore = 1;\n      } else {\n        englishScore = 0;\n      }\n\n      let gpa = (mathScore + historyScore + scienceScore + englishScore) / 4;\n      return <td>{gpa}</td>;\n    }\n\n    return (\n      <React.Fragment>\n        <table className=\"table table-bordered container\">\n          <thead>\n            <tr>\n              <th scope=\"col\">Name</th>\n              <th scope=\"col\">Math</th>\n              <th scope=\"col\">History</th>\n              <th scope=\"col\">Science</th>\n              <th scope=\"col\">English</th>\n              <th scope=\"col\">GPA</th>\n            </tr>\n          </thead>\n          <tbody>\n            {this.state.students.map((student) => (\n              <TableRow\n                key={student._id}\n                name={student.name}\n                math={student.grades[0]}\n                history={student.grades[1]}\n                science={student.grades[2]}\n                english={student.grades[3]}\n              />\n            ))}\n            {items.map((item) => {\n              return (\n                <tr>\n                  <td>{item.name}</td>\n                  <td>{item.math}</td>\n                  <td>{item.history}</td>\n                  <td>{item.science}</td>\n                  <td>{item.english}</td>\n                  {gpaCal(item.math, item.history, item.science, item.english)}\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </React.Fragment>\n    );\n  }\n}\nexport default Table;\n","import React, { Component } from \"react\";\n\nclass Form extends Component {\n  render() {\n    return (\n      <form className=\"container mb-2\" onSubmit={this.props.handleFormSubmit}>\n        <div className=\"form-row\">\n          <div className=\"col\">\n            <input\n              type=\"text\"\n              placeholder=\"Name\"\n              name=\"name\"\n              value={this.props.name}\n              onChange={this.props.handleInputChange}\n            />\n          </div>\n          <div className=\"col\">\n            <input\n              type=\"text\"\n              placeholder=\"Math\"\n              name=\"math\"\n              value={this.props.math}\n              onChange={this.props.handleInputChange}\n            />\n          </div>\n          <div className=\"col\">\n            <input\n              type=\"text\"\n              placeholder=\"History\"\n              name=\"history\"\n              value={this.props.history}\n              onChange={this.props.handleInputChange}\n            />\n          </div>\n          <div className=\"col\">\n            <input\n              type=\"text\"\n              placeholder=\"Science\"\n              name=\"science\"\n              value={this.props.science}\n              onChange={this.props.handleInputChange}\n            />\n          </div>\n          <div className=\"col\">\n            <input\n              type=\"text\"\n              placeholder=\"English\"\n              name=\"english\"\n              value={this.props.english}\n              onChange={this.props.handleInputChange}\n            />\n          </div>\n          <button type=\"submit\" className=\"btn btn-primary\" value=\"Submit\">\n            Add Student\n          </button>\n        </div>\n      </form>\n    );\n  }\n}\n\nexport default Form;\n","import React, { Component } from \"react\";\nimport Table from \"../../components/Table\";\nimport Form from \"../../components/Form\";\n\nclass Home extends Component {\n  // removeFriend = id => {\n  //   // Filter this.state.friends for friends with an id not equal to the id\n  //   // being removed\n  //   const friends = this.state.friends.filter(friend => friend.id !== id);\n  //   // Set this.state.friends equal to the new friends array\n  //   this.setState({ friends });\n  // };\n  constructor() {\n    super();\n    this.state = {\n      name: \"\",\n      math: \"\",\n      history: \"\",\n      science: \"\",\n      english: \"\",\n      items: []\n    };\n  }\n\n  handleFormSubmit = (event) => {\n    event.preventDefault();\n\n    let items = [...this.state.items];\n\n    items.push({\n      name: this.state.name,\n      math: this.state.math,\n      history: this.state.history,\n      science: this.state.science,\n      english: this.state.english\n    });\n\n    this.setState({\n      items,\n      name: \"\",\n      math: \"\",\n      history: \"\",\n      science: \"\",\n      english: \"\"\n    });\n  };\n\n  handleInputChange = (event) => {\n    let input = event.target;\n    let name = event.target.name;\n    let value = input.value;\n\n    this.setState({\n      [name]: value\n    });\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <h1 style={{ textAlign: \"center\" }} className=\"m-5\">\n          Student Chart\n        </h1>\n        <Form\n          handleFormSubmit={this.handleFormSubmit}\n          handleInputChange={this.handleInputChange}\n          newName={this.state.name}\n          newMath={this.state.math}\n          newHistory={this.state.history}\n          newScience={this.state.science}\n          newEnglish={this.state.english}\n        />\n        <Table items={this.state.items} />\n      </React.Fragment>\n    );\n  }\n}\nexport default Home;\n","import React from 'react';\nimport './App.css';\nimport Home from \"./pages/Home\"\n\nfunction App() {\n  return (\n    <Home />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}